version: '3.8'

services:
    nginx:
        image: nginx:alpine
        environment:
            TZ: Europe/Moscow
        hostname: host.docker.internal
        ports:
            - "8090:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./storage/data/nginx/logs:/var/log/nginx
            - ./:/var/www/html
        depends_on:
            - php-fpm

    php-fpm:
        build:
            context: ./docker/php-fpm
            dockerfile: Dockerfile
        environment:
            TZ: "Europe/Moscow"
            PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-serverName=docker}
            XDEBUG_TRIGGER: "yes"
        volumes:
            - .:/var/www/html
            - ./docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ./docker/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./storage/data/php/logs:/var/log/php
        depends_on:
            mysql:
                condition: service_healthy
            redis:
                condition: service_healthy
        extra_hosts:
            - "host.docker.internal:host-gateway"

    mysql:
        image: mysql:8.0-oracle
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-}
            MYSQL_DATABASE: ${DB_DATABASE:-base}
            MYSQL_PASSWORD: ${DB_PASSWORD:-}
        ports:
            - "3308:3306"
        volumes:
            - mysql_data:/var/lib/mysql
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 1s
            retries: 60

    postgres:
        image: postgres:16.4-alpine
        environment:
            POSTGRES_DB: ${DB_DATABASE:-base}
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
            TZ: Europe/Moscow
        ports:
            - "5434:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - postgres_data:/var/lib/postgresql/data

    redis:
        image: redis:7.4.0-alpine
        environment:
            TZ: Europe/Moscow
        ports:
            - "127.0.0.1:6381:6379"
        volumes:
            - redis_data:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

volumes:
    mysql_data:
    redis_data:
    postgres_data:
